// Run the script with dotnet fsi: 'dotnet fsi FetchPinTestData.fsx'

#r "nuget: FSharp.Data"
#load "./FetchCommon.fs"

open FSharp.Data
open System.Text
open System.IO
open FetchCommon

type TestData = CsvProvider<const(__SOURCE_DIRECTORY__ + "/PinTestDataTemplate.csv")>

let getPins url =
    async {
        let! pins = TestData.AsyncLoad url
        return pins.Rows |> Seq.map (fun r -> r.Testpersonnummer)
    }

let header = """// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
module internal ActiveLogin.Identity.Swedish.TestData.AllPins
    let allPins =
        [|
"""

let footer = """        |]"""
let sb = StringBuilder()

let pins =
    [ "https://skatteverket.entryscape.net/store/9/resource/149"
      "https://skatteverket.entryscape.net/store/9/resource/535"
      "https://skatteverket.entryscape.net/store/9/resource/686"
      "https://skatteverket.entryscape.net/store/9/resource/1026"
      "https://skatteverket.entryscape.net/store/9/resource/1271"
      "https://skatteverket.entryscape.net/store/9/resource/1580"
      "https://skatteverket.entryscape.net/store/9/resource/1886" ]
    |> List.map getPins
    |> Async.Parallel
    |> Async.RunSynchronously
    |> Seq.concat
    |> Seq.sort
    |> Seq.map string

sb.Clear()
sb.Append(header)
pins
|> Seq.iter (toStringTuple >> appendLine sb)
sb.Append(footer)
File.WriteAllText("AllPins.fs", sb.ToString())
