// To run this script, make sure fake is installed, or install it:
// "dotnet tool install fake-cli -g" or see here for more options: https://fake.build/fake-gettingstarted.html
// to run the script:
// "fake run FetchPinTestData.fsx"
// It will fetch the dependencies list below using paket and run the script.
// If you are updating/adding any dependencies in the list below, remove the ".fake"-folder and the
// FetchPinTestData.fsx.lock-file and run the script again to download the new dependencies.
#r "paket:
nuget FSharp.Core 4.5.4
nuget FSharp.Data //"
#load "./.fake/FetchTestData.fsx/intellisense.fsx"
#load "./FetchCommon.fs"

open FSharp.Data
open System.Text
open System.IO
open FetchCommon

type TestData = CsvProvider<"PinTestDataTemplate.csv">

let getPins url =
    async { let! pins = TestData.AsyncLoad url
            return pins.Rows |> Seq.map (fun r -> r.Testpersonnummer) }

let header = """// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
module internal ActiveLogin.Identity.Swedish.TestData.AllPins
    let allPins =
        [|
"""

let footer = """        |]"""
let sb = StringBuilder()

let pins =
    [ "https://skatteverket.entryscape.net/store/9/resource/149"
      "https://skatteverket.entryscape.net/store/9/resource/535"
      "https://skatteverket.entryscape.net/store/9/resource/686" ]
    |> List.map getPins
    |> Async.Parallel
    |> Async.RunSynchronously
    |> Seq.concat
    |> Seq.sort
    |> Seq.map string

sb.Clear()
sb.Append(header)
pins
|> Seq.iter (toStringTuple >> appendLine sb)
sb.Append(footer)
File.WriteAllText("AllPins.fs", sb.ToString())
